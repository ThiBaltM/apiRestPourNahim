{
    "openapi": "3.0.0",
    "info": {
      "title": "API Documentation",
      "description": "Documentation for your API endpoints",
      "version": "1.0.0"
    },
    "servers": [
      {
        "url": "http://localhost:8000",
        "description": "Local server"
      }
    ],
    "paths": {
      "/": {
        "get": {
          "summary": "Get Hello World",
          "responses": {
            "200": {
              "description": "Hello World response"
            }
          }
        }
      },
      "/products": {
        "get": {
          "summary": "Get products",
          "parameters": [
            {
              "name": "name",
              "in": "query",
              "description": "Filter products by name",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "about",
              "in": "query",
              "description": "Filter products by about",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "price",
              "in": "query",
              "description": "Filter products by price",
              "required": false,
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response with products",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            },
            "404": {
              "description": "Products not found"
            }
          }
        },
        "post": {
          "summary": "Create a new product",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSchemaPost"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Product created successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid data"
            }
          }
        }
      },
      "/products/{id}": {
        "get": {
          "summary": "Get product by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Product ID",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response with product",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            },
            "404": {
              "description": "Product not found"
            }
          }
        },
        "delete": {
          "summary": "Delete product by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Product ID",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Product deleted successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            },
            "404": {
              "description": "Product not found"
            }
          }
        }
      },
      "/users": {
        "get": {
          "summary": "Get all users",
          "responses": {
            "200": {
              "description": "Successful response with users",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a new user",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSchemaPost"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "User created successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid data"
            }
          }
        }
      },
      "/users/{id}": {
        "get": {
          "summary": "Get user by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "User ID",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response with user",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            },
            "404": {
              "description": "User not found"
            }
          }
        },
        "put": {
          "summary": "Update user by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "User ID",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSchema"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "User updated successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            },
            "404": {
              "description": "User not found"
            }
          }
        },
        "patch": {
          "summary": "Partially update user by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "User ID",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSchema"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "User updated successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "ProductSchemaPost": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "about": {
              "type": "string"
            },
            "price": {
              "type": "number",
              "minimum": 0
            }
          }
        },
        "UserSchemaPost": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          }
        },
        "UserSchema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          }
        }
      }
    }
  }
  